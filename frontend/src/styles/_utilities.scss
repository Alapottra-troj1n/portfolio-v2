.is-unstyled {
  background: none;
  border: none;
  border-radius: 0;
  font-size: inherit;
  min-height: auto;
  color: inherit;
  text-align: inherit;
  padding: 0;

  &:focus,
  &:hover {
    outline: none;
    border: none;
    color: inherit;
    background: none;
    box-shadow: none;
  }
}

.is-hidden {
  display: none !important;
}

// Screen reader only
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hide-desktop {
  @include from ($tablet) {
    display: none !important;
  }
}

.hide-non-desktop {
  @include until ($tablet) {
    display: none !important;
  }
}

.hide-phone {
  @include until ($large-phone) {
    display: none !important;
  }
}

// reference: https://ferie.medium.com/detect-a-touch-device-with-only-css-9f8e30fa1134
.hide-touch-device {
  @media (hover: none) and (pointer: coarse) {
    display: none !important;
  }
}

.hide-hoverable-device {
  @media (hover: hover) and (pointer: fine) {
    display: none !important;
  }
}

// various padding/margin related utility classes.

$spacing-nums: 0, 2, 4, 10, 20, 30, 40, 50, 60, 70, 80;
@each $n in $spacing-nums {
  .mt-#{$n} { margin-top: #{$n}px !important; }
  .mb-#{$n} { margin-bottom: #{$n}px !important; }
  .pt-#{$n} { padding-top: #{$n}px !important; }
  .pb-#{$n} { padding-bottom: #{$n}px !important; }
}

$side-spacing-nums: 0, 2, 4, 10;
@each $n in $spacing-nums {
  .ml-#{$n} { margin-left: #{$n}px !important; }
  .mr-#{$n} { margin-right: #{$n}px !important; }
  .pl-#{$n} { padding-left: #{$n}px !important; }
  .pr-#{$n} { padding-right: #{$n}px !important; }
}

.is-inline-block { display: inline-block; }
.is-inline-flex { display: inline-flex; }

.loader-animation {
  $side: var(--loader-side, 2rem);
  $border-width: var(--loader-border, 2px);

  position: relative;
  display: inline-block;
  width: $side;
  height: $side;

  .loader-track,
  .loader-tyre {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 50%;
    border-width: $border-width;
    border-style: solid;
  }

  .loader-track {
    border-color: $background-0_2;
    z-index: 0;
  }

  .loader-tyre {
    border-color: rgba(0, 0, 0, 0);
    z-index: 1;
    border-bottom-color: $text-0;
    animation: loader-rotation 2.2s linear infinite;
  }
}

@keyframes loader-rotation {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.inline-svg-common {
  --svg-feature-color: var(--text-2);

  position: relative;
  display: inline-block;
  height: auto;
  color: $text-1;

  &.rocket-icon {
    --svg-feature-color: #B6B6B6;
    color: $text-0;

    svg {
      width: var(--svg-width);
      height: var(--svg-width);
    }
  }
}

button.scroll-to-top-btn {
  position: fixed;
  bottom: 1.5rem;
  right: 2rem;
  display: flex;
  flex-direction: column;
  row-gap: 0.2rem;
  align-items: center;
  justify-content: flex-start;
  z-index: 50;
  font-size: 0.8rem;
  font-weight: 400;
  line-height: 1;
  padding: 0.8rem;
  border: 1px solid $text-0;
  background-color: $background-0;
  box-shadow: 2px 2px 0 0 $text-0;
  transition:
    transform 100ms ease-out,
    box-shadow 100ms ease-out,
    background-color 100ms ease-out,
    opacity 200ms ease-out;
  opacity: 0;
  pointer-events: none;

  @include from ($large-phone) {
    right: 2.5rem;
  }

  &.is-active {
    opacity: 1;
    pointer-events: initial;
  }

  i {
    font-size: 1.2em;
  }

  span {
    text-transform: uppercase;
  }

  &:hover,
  &:focus {
    border: 1px solid $text-0;
    background-color: $background-0;
    box-shadow: 3px 3px 0 0 $text-0;
    transform: translate(-1px, -1px);

    span {
      text-decoration: underline;
    }
  }

  &:active {
    transform: translate(0px, 0px);
    box-shadow: 2px 2px 0 0 $text-0;
    transition: none;
  }
}
