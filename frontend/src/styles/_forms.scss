$inputHeight: 4.6rem;

@mixin placeholder {
  $placeholders: ":-moz" ":-webkit-input" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

form {
  position: relative;
  display: block;
  width: 100%;
}

.form-field {
  position: relative;
  display: block;
  width: 100%;
  max-width: 100%;
  margin-bottom: 3rem;

  &:last-of-type {
    margin-bottom: 0;
  }

  .helper {
    display: block;
    color: $text-2;
    margin: 0.4rem 0 0 0;
    font-size: $size-8;
    padding-left: 0.4rem;
    width: 100%;

    @include has-icon;
    &::before {
      content: "\e717";
      display: inline-block;
      font-size: 1.1em;
      margin-right: 0.6rem;
      transform: translateY(1px);
    }
  }
}

.form-error {
  display: block;
  margin: 0.4rem 0 0;
  padding-left: 0.2rem;
  font-size: $size-8;
  color: $warning;
  line-height: 1.2;
  width: 100%;

  @include has-icon;
  &::before {
    content: "\e717";
    display: inline-block;
    font-size: 1.1em;
    margin-right: 0.6rem;
    transform: translateY(1px);
  }
}

.label-common {
  display: block;
  font-size: $size-8;
  font-weight: 800;
  color: $text-0;
  line-height: 1.4;
  margin-bottom: 0.8rem;

  .optional {
    display: inline-block;
    margin-left: 0.4rem;
    color: $text-2;
    font-size: 0.925em;
  }
}

/* custom-input */
.textarea,
.input {
  position: relative;
  display: flex;
  justify-content: center;
  height: $inputHeight;
  width: 100%;
  padding: 0 1.2rem;
  background-color: var(--input-bg-color);
  border: 1px solid var(--input-border-color);
  font-size: $size-6;
  line-height: 1.3;
  outline: none;
  font-family: inherit;
  font-weight: 200;
  color: $text-0;
  transition:
    border-color 150ms ease-in,
    background-color 150ms ease-in;

  &:hover {
    border-color: $background-0_2;
  }

  &:focus {
    border-color: $text-0;
    background-color: $background-0;
  }

  &.is-error,
  &.is-error:focus,
  &.is-error:hover {
    border-color: var(--warning);
  }

  @include placeholder {
    color: $text-2;
    font-size: 0.85em;
    font-weight: 200;
    opacity: 0.8;
  }
}

.textarea {
  padding: 1.2rem;
  height: auto;
  min-height: 14.2rem;
  resize: vertical;
}

// Custom checkbox UI component
.checkbox-container {
  position: relative;
  display: inline-flex;
  column-gap: 0.6rem;
  align-items: flex-start;
  justify-content: flex-start;
  font-size: $size_7;

  .checkbox-wrapper {
    position: relative;
    width: 1.6rem;
    height: 1.6rem;
    border-radius: 0.4rem;
    flex-shrink: 0;
    border: 1px solid $text-2;
    transition: border-color 150ms linear;
    overflow: hidden;

    input[type="checkbox"] {
      position: absolute;
      width: calc(100% + 2px);
      height: calc(100% + 2px);
      opacity: 0;
      z-index: 2;
      top: -1px;
      left: -1px;
      cursor: pointer;
    }

    .checkbox-inner {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: $text-0;
      opacity: 0;
      transition:
        opacity 150ms ease-out;

      @include has-icon;
      &::before {
        content: "\e64c";
        font-size: 1rem;
        font-weight: 800;
        line-height: 1;
        transform: scale(0);
        transition: transform 150ms linear;
        color: $highlight;
      }
    }

    input[type="checkbox"]:checked ~ .checkbox-inner {
      opacity: 1;

      &::before {
        transform: scale(1);
      }
    }
  }

  .checkbox-text {
    position: relative;
    min-height: 1.6rem;
    line-height: 1.6rem;
    font-size: inherit;
    color: $text-1;
    cursor: pointer;
  }

  &:hover,
  &:focus,
  &.is-active {
    .checkbox-wrapper {
      border-color: $text-0;
    }
  }
}
